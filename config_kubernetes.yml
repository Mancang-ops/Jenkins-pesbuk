apiVersion: v1
kind: Namespace
metadata:
  name: production
  labels:
    name: production

---

apiVersion: v1
kind: Service
metadata:
  name: jenkins-sp3-fb-service
  namespace: production
  labels:
    app: p-jenkins-sp3-fb
    env: production
spec:
  type: NodePort
  selector:
    app: p-jenkins-sp3-fb
  ports:
    - port: 80
      protocol: TCP

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-sp3-fb-configmap
  namespace: production
  labels:
    app: p-jenkins-sp3-fb
    env: production
data:
  config.php: |
    <?php
    $db_host = getenv("DB_HOST");
    $db_user = getenv("DB_USER");
    $db_pass = getenv("DB_PASS");
    $db_name = "dbrudi";
    try {
    //create PDO connection
    $db = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_pass);
    } catch(PDOException $e) {
    //show error
    die("Terjadi masalah: " . $e->getMessage());
    }

---

apiVersion: v1
kind: Secret
metadata:
  name: p-secret-fb
  namespace: production
type: Opaque
data:
  DB_USER: cm9vdA==
  DB_PASS: MTIzNDU2Nzg5MA==

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-sp3-fb-deployment
  namespace: production
  labels:
    app: p-jenkins-sp3-fb
    env: production
spec:
  selector:
    matchLabels:
      app: p-jenkins-sp3-fb
  replicas: 2
  template:
    metadata:
      labels:
        app: p-jenkins-sp3-fb
    spec:
      volumes:
        - configMap:
            name: jenkins-sp3-fb-configmap
          name: config-fb
      containers:
        - name: jenkins-sp3-fb-pod
          image: $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$BUILD_NUMBER
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config-fb
              mountPath:  "/var/www/sosial-media/config.php"
              subPath: "config.php"
          env:  
            - name: DB_HOST    
              value: "database-1.cogsyqawtx3c.us-east-2.rds.amazonaws.com"
            - name: DB_USER    
              valueFrom:       
                secretKeyRef:
                  name: jenkins-sp3-fb-secret
                  key: DB_USER  
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: jenkins-sp3-fb-secret
                  key: DB_PASS
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: p-ingress
  namespace: production
  annotations:
    ## Untuk menaikan batas upload file
    nginx.org/client-max-body-size: "10m"
    ## Memaksa jalan di https
   # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
## Service Location n Characters
  - host: jenkins-pesbuk.borjong.monster
    http:
      paths:
      - path: /
        backend:
          serviceName: jenkins-sp3-fb-service
          servicePort: 80
